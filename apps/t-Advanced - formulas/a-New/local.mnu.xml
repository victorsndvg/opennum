<menus name="Advanced - formulas">
<!--http://docs.python.org/2/library/math.html-->
	<menu name="Input data">
		<submenu name="Real number">
			<leaf name="Input" title="type a real scalar (x):" type="float">
				<element>2</element>
			</leaf>
		</submenu>
		<submenu name="Complex number">
			<leaf name="Input" title="Type a complex scalar (z):" type="complex">
				<element>(2,1)</element>
			</leaf>
		</submenu>
		<submenu name="Static fields">
			<struct name="Options" title="Fill in the following data:">
				<leaf name="F1: Field 1" type="file" subtype="mesh" title="Choose a field file (F1):" tooltip="Select the 3D mesh file that will be used">
					<element>scalarfield1.vtu</element>
				</leaf>
				<leaf name="F2: Field 2" type="file" subtype="mesh" title="Choose a field file (F2):" tooltip="Select the 3D mesh file that will be used">
					<element>scalarfield2.vtu</element>
				</leaf>
				<leaf name="F3: Field 3" type="file" subtype="mesh" title="Choose a field file (F3):" tooltip="Select the 3D mesh file that will be used">
					<element>vectorfield.vtu</element>
				</leaf>
			</struct>
		</submenu>
		<submenu name="Animated fields">
			<struct name="Options" title="Fill in the following data:">
				<leaf name="AF1: Animated field 1" type="file" subtype="mesh" title="Choose a field file (AF1):" tooltip="Select the 3D mesh file that will be used">
					<element>animation/animatedfield1.pvd</element>
				</leaf>
				<leaf name="AF2: Animated field 2" type="file" subtype="mesh" title="Choose a field file (AF2):" tooltip="Select the 3D mesh file that will be used">
					<element>animation/animatedfield2.pvd</element>
				</leaf>
				<leaf name="AF3: Animated field 3" type="file" subtype="mesh" title="Choose a field file (AF3):" tooltip="Select the 3D mesh file that will be used">
					<element>animation/animatedvectorfield.pvd</element>
				</leaf>
			</struct>
		</submenu>
	</menu>
	<menu name="Visualization">
		<submenu name="Fields">
			<struct name="Plot" title="Choose field to plot:">
				<struct name="F1" mesh="menu:/Input data/Static fields/Options/F1: Field 1" pointdata="data:Temperature" plot="filled">
				</struct>
				<struct name="F2" mesh="menu:/Input data/Static fields/Options/F2: Field 2" pointdata="data:Temperature" plot="filled">
				</struct>
				<struct name="F3" mesh="menu:/Input data/Static fields/Options/F3: Field 3" pointdata="data:Magnetic field (A/m)" plot="vector_field">
				</struct>
			</struct>
		</submenu>
		<submenu name="Formulas">
			<struct name="Math" title="Formulas:">
				<struct name="Operators" title="Choose a formula to plot:">
					<struct name="F1+F2" pointdata="data:F1+F2" formula="t+u;t=menu:/Visualization/Fields/Plot/F1;u=menu:/Visualization/Fields/Plot/F2" plot="filled">
					</struct>
					<struct name="F1-F2" pointdata="data:F1-F2" formula="t-u;t=menu:/Visualization/Fields/Plot/F1;u=menu:/Visualization/Fields/Plot/F2" plot="filled">
					</struct>
					<struct name="F1*F2" pointdata="data:F1*F2" formula="t*u;t=menu:/Visualization/Fields/Plot/F1;u=menu:/Visualization/Fields/Plot/F2" plot="filled">
					</struct>
					<struct name="F1/F2" pointdata="data:F1/F2" formula="t/u;t=menu:/Visualization/Fields/Plot/F1;u=menu:/Visualization/Fields/Plot/F2" plot="filled">
					</struct>
					<struct name="x+F1" pointdata="data:x+F1" formula="t+u;t=menu:/Visualization/Fields/Plot/F1;u=menu:/Input data/Real number/Input" plot="filled">
					</struct>
					<struct name="F1-x" pointdata="data:F1-x" formula="t-u;t=menu:/Visualization/Fields/Plot/F1;u=menu:/Input data/Real number/Input" plot="filled">
					</struct>
					<struct name="x*F1" pointdata="data:x*F1" formula="t*u;t=menu:/Visualization/Fields/Plot/F1;u=menu:/Input data/Real number/Input" plot="filled">
					</struct>
					<struct name="F1/x" pointdata="data:F1/x" formula="t/u;t=menu:/Visualization/Fields/Plot/F1;u=menu:/Input data/Real number/Input" plot="filled">
					</struct>
				</struct>
				<struct name="Constants" title="Choose a formula to plot:">
					<struct name="e*F1" pointdata="data:e*F1" formula="e*t;t=menu:/Visualization/Fields/Plot/F1" plot="filled">
					</struct>
					<struct name="pi*F1" pointdata="data:pi*F1" formula="pi*t;t=menu:/Visualization/Fields/Plot/F1" plot="filled">
					</struct>
					<struct name="Constant field" pointdata="data:Constant field" formula="u;t=menu:/Visualization/Fields/Plot/F1;u=menu:/Input data/Real number/Input" plot="filled">
					</struct>
				</struct>
				<struct name="Vectors" title="Choose a formula to plot:">
					<struct name="1st component" pointdata="data:F3[0]" formula="t[0];t=menu:/Visualization/Fields/Plot/F3" plot="filled">
					</struct>
					<struct name="2nd component" pointdata="data:F3[1]" formula="t[1];t=menu:/Visualization/Fields/Plot/F3" plot="filled">
					</struct>
					<struct name="3rd component" pointdata="data:F3[2]" formula="t[2];t=menu:/Visualization/Fields/Plot/F3" plot="filled">
					</struct>
					<struct name="Modulus" pointdata="data:sqrt(F3[0]*F3[0]+F3[1]*F3[1]+F3[2]*F3[2])" formula="sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t=menu:/Visualization/Fields/Plot/F3" plot="filled">
					</struct>
				</struct>
				<struct name="Type casting" title="Choose a formula to plot:">
					<struct name="int(pi)" pointdata="data:int(pi)" formula="int(pi);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
					</struct>
					<struct name="float(F1)" pointdata="data:float(F1)" formula="float(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
					</struct>
					<struct name="imag(z)" pointdata="data:imag(z)" formula="imag(u);t=menu:/Visualization/Fields/Plot/F1;u=menu:/Input data/Complex number/Input" plot="filled">
					</struct>
					<struct name="real(complex(F1))" pointdata="data:real(complex(F1))" formula="real(complex(t));t=menu:/Visualization/Fields/Plot/F1" plot="filled">
					</struct>
				</struct>
				<struct name="Functions" title="Choose function type:">
					<struct name="Number-theoretic and representation" title="Choose a formula to plot:">
						<struct name="floor(F1)" pointdata="data:floor(F1)" formula="floor(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="ceil(F1)" pointdata="data:ceil(F1)" formula="ceil(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="abs(F1)" pointdata="data:abs(F1)" formula="abs(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="fabs(F1)" pointdata="data:fabs(F1)" formula="fabs(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="fmod(F1,F2)" pointdata="data:fmod(F1,F2)" formula="fmod(t,u);t=menu:/Visualization/Fields/Plot/F1;u=menu:/Visualization/Fields/Plot/F2" plot="filled">
						</struct>
						<struct name="frexp(F1)[0]" pointdata="data:frexp(F1)[0]" formula="frexp(t)[0];t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="frexp(F1)[1]" pointdata="data:frexp(F1)[1]" formula="frexp(t)[1];t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="ldexp(F1,x)" pointdata="data:ldexp(F1,x)" formula="ldexp(t,int(u));t=menu:/Visualization/Fields/Plot/F1;u=menu:/Input data/Real number/Input" plot="filled">
						</struct>
						<struct name="modf(F1)[0]" pointdata="data:modf(F1)[0]" formula="modf(t)[0];t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="modf(F1)[1]" pointdata="data:modf(F1)[1]" formula="modf(t)[1];t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
					</struct>
					<struct name="Power and logarithmic" title="Choose a formula to plot:">
						<struct name="sqrt(F1)" pointdata="data:sqrt(F1)" formula="sqrt(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="pow(F1,x)" pointdata="data:pow(F1,x)" formula="pow(t,u);t=menu:/Visualization/Fields/Plot/F1;u=menu:/Input data/Real number/Input" plot="filled">
						</struct>

						<struct name="exp(F1)" pointdata="data:exp(F1)" formula="exp(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="log(F1)" pointdata="data:log(F1)" formula="log(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="log10(F1)" pointdata="data:log10(F1)" formula="log10(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
					</struct>
					<struct name="Trigonometric" title="Choose a formula to plot:">
						<struct name="sin(pi/2*F1)" pointdata="data:sin(pi/2*F1)" formula="sin(t*pi/2);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="cos(2*pi*F1)" pointdata="data:cos(2*pi*F1)" formula="cos(t*pi*2);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="tan(F1)" pointdata="data:tan(F1)" formula="tan(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="asin(sin(F1))" pointdata="data:asin(sin(F1))" formula="asin(sin(t));t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="acos(cos(F1))" pointdata="data:acos(cos(F1))" formula="acos(cos(t));t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="atan(tan(F1))" pointdata="data:atan(tan(F1))" formula="atan(tan(t));t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="atan2(F1,F2)" pointdata="data:atan2(F1, F2)" formula="atan2(t,u);t=menu:/Visualization/Fields/Plot/F1;u=menu:/Visualization/Fields/Plot/F2" plot="filled">
						</struct>
						<struct name="hypot(F1,F2)" pointdata="data:hypot(F1,F2)" formula="hypot(t,u);t=menu:/Visualization/Fields/Plot/F1;u=menu:/Visualization/Fields/Plot/F2" plot="filled">
						</struct>
					</struct>
					<struct name="Angular conversion" title="Choose a formula to plot:">
						<struct name="degrees(F1)" pointdata="data:degrees(F1)" formula="degrees(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="radians(F1)" pointdata="data:radians(F1)" formula="radians(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
					</struct>
					<struct name="Hyperbolic" title="Choose a formula to plot:">
						<struct name="cosh(F1)" pointdata="data:cosh(F1)" formula="cosh(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="sinh(F1)" pointdata="data:sinh(F1)" formula="sinh(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
						<struct name="tanh(F1)" pointdata="data:tanh(F1)" formula="tanh(t);t=menu:/Visualization/Fields/Plot/F1" plot="filled">
						</struct>
					</struct>
				</struct>
			</struct>
		</submenu>
		<submenu name="Close all">
			<action name="close_plots" />
		</submenu>
	</menu>
	<menu name="Animation">
		<submenu name="Fields">
			<struct name="Plot" title="Choose field to plot:">
				<struct name="AF1" mesh="menu:/Input data/Animated fields/Options/AF1: Animated field 1" pointdata="data:Magnetic vector potential (Wb/m)" plot="filled">
				</struct>
				<struct name="AF2" mesh="menu:/Input data/Animated fields/Options/AF2: Animated field 2" pointdata="data:Magnetic vector potential (Wb/m)" plot="filled">
				</struct>
				<struct name="AF3" mesh="menu:/Input data/Animated fields/Options/AF3: Animated field 3" pointdata="data:Magnetic field (A/m)" plot="vector_field">
				</struct>
			</struct>
		</submenu>
		<submenu name="Formulas">
			<struct name="Math" title="Formulas:">
				<struct name="Operators" title="Choose a formula to plot:">
					<struct name="AF1+AF2" pointdata="data:AF1+AF2" formula="t+u;t=menu:/Animation/Fields/Plot/AF1;u=menu:/Animation/Fields/Plot/AF2" plot="filled">
					</struct>
					<struct name="AF1-AF2" pointdata="data:AF1-AF2" formula="t-u;t=menu:/Animation/Fields/Plot/AF1;u=menu:/Animation/Fields/Plot/AF2" plot="filled">
					</struct>
					<struct name="AF1*AF2" pointdata="data:AF1*AF2" formula="t*u;t=menu:/Animation/Fields/Plot/AF1;u=menu:/Animation/Fields/Plot/AF2" plot="filled">
					</struct>
					<struct name="AF1/AF2" pointdata="data:AF1/AF2" formula="t/u;t=menu:/Animation/Fields/Plot/AF1;u=menu:/Animation/Fields/Plot/AF2" plot="filled">
					</struct>
					<struct name="x+AF1" pointdata="data:x+AF1" formula="t+u;t=menu:/Animation/Fields/Plot/AF1;u=menu:/Input data/Real number/Input" plot="filled">
					</struct>
					<struct name="AF1-x" pointdata="data:AF1-x" formula="t-u;t=menu:/Animation/Fields/Plot/AF1;u=menu:/Input data/Real number/Input" plot="filled">
					</struct>
					<struct name="x*AF1" pointdata="data:x*AF1" formula="t*u;t=menu:/Animation/Fields/Plot/AF1;u=menu:/Input data/Real number/Input" plot="filled">
					</struct>
					<struct name="AF1/x" pointdata="data:AF1/x" formula="t/u;t=menu:/Animation/Fields/Plot/AF1;u=menu:/Input data/Real number/Input" plot="filled">
					</struct>
				</struct>
				<struct name="Constants" title="Choose a formula to plot:">
					<struct name="e*AF1" pointdata="data:e*AF1" formula="e*t;t=menu:/Animation/Fields/Plot/AF1" plot="filled">
					</struct>
					<struct name="pi*AF1" pointdata="data:pi*AF1" formula="pi*t;t=menu:/Animation/Fields/Plot/AF1" plot="filled">
					</struct>
					<struct name="Constant field" pointdata="data:Constant field" formula="u;t=menu:/Animation/Fields/Plot/AF1;u=menu:/Input data/Real number/Input" plot="filled">
					</struct>
				</struct>
				<struct name="Vectors" title="Choose a formula to plot:">
					<struct name="1st component" pointdata="data:AF3[0]" formula="t[0];t=menu:/Animation/Fields/Plot/AF3" plot="filled">
					</struct>
					<struct name="2nd component" pointdata="data:AF3[1]" formula="t[1];t=menu:/Animation/Fields/Plot/AF3" plot="filled">
					</struct>
					<struct name="3rd component" pointdata="data:AF3[2]" formula="t[2];t=menu:/Animation/Fields/Plot/AF3" plot="filled">
					</struct>
					<struct name="Modulus" pointdata="data:sqrt(AF3[0]*AF3[0]+AF3[1]*AF3[1]+AF3[2]*AF3[2])" formula="sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t=menu:/Animation/Fields/Plot/AF3" plot="filled">
					</struct>
				</struct>
				<struct name="Type casting" title="Choose a formula to plot:">
					<struct name="int(pi)" pointdata="data:int(pi)" formula="int(pi);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
					</struct>
					<struct name="float(AF1)" pointdata="data:float(AF1)" formula="float(t);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
					</struct>
					<struct name="imag(z)" pointdata="data:imag(z)" formula="imag(u);t=menu:/Animation/Fields/Plot/AF1;u=menu:/Input data/Complex number/Input" plot="filled">
					</struct>
					<struct name="real(complex(AF1))" pointdata="data:real(complex(AF1))" formula="real(complex(t));t=menu:/Animation/Fields/Plot/AF1" plot="filled">
					</struct>
				</struct>
				<struct name="Functions" title="Choose function type:">
					<struct name="Number-theoretic and representation" title="Choose a formula to plot:">
						<struct name="floor(AF1)" pointdata="data:floor(AF1)" formula="floor(t);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="ceil(AF1)" pointdata="data:ceil(AF1)" formula="ceil(t);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="abs(AF1)" pointdata="data:abs(AF1)" formula="abs(t);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="fabs(AF1)" pointdata="data:fabs(A F1)" formula="fabs(t);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="fmod(AF1,AF2)" pointdata="data:fmod(AF1,AF2)" formula="fmod(t,u);t=menu:/Animation/Fields/Plot/AF1;u=menu:/Animation/Fields/Plot/AF2" plot="filled">
						</struct>
						<struct name="frexp(AF1)[0]" pointdata="data:frexp(AF1)[0]" formula="frexp(t)[0];t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="frexp(AF1)[1]" pointdata="data:frexp(AF1)[1]" formula="frexp(t)[1];t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="ldexp(AF1,x)" pointdata="data:ldexp(AF1,x)" formula="ldexp(t,int(u));t=menu:/Animation/Fields/Plot/AF1;u=menu:/Input data/Real number/Input" plot="filled">
						</struct>
						<struct name="modf(AF1)[0]" pointdata="data:modf(AF1)[0]" formula="modf(t)[0];t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="modf(AF1)[1]" pointdata="data:modf(AF1)[1]" formula="modf(t)[1];t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
					</struct>
					<struct name="Power and logarithmic" title="Choose a formula to plot:">
						<struct name="sqrt(abs(AF1))" pointdata="data:sqrt(abs(AF1))" formula="sqrt(abs(t));t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="pow(AF1,x)" pointdata="data:pow(AF1,x)" formula="pow(t,u);t=menu:/Animation/Fields/Plot/AF1;u=menu:/Input data/Real number/Input" plot="filled">
						</struct>

						<struct name="exp(AF1)" pointdata="data:exp(AF1)" formula="exp(t);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="log(abs(AF1))" pointdata="data:log(abs(AF1))" formula="log(abs(t));t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="log10(abs(AF1))" pointdata="data:log10(abs(AF1))" formula="log10(abs(t));t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
					</struct>
					<struct name="Trigonometric" title="Choose a formula to plot:">
						<struct name="sin(pi/2*AF1)" pointdata="data:sin(pi/2*AF1)" formula="sin(t*pi/2);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="cos(2*pi*AF1)" pointdata="data:cos(2*pi*AF1)" formula="cos(t*pi*2);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="tan(AF1)" pointdata="data:tan(AF1)" formula="tan(t);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="asin(sin(AF1))" pointdata="data:asin(sin(AF1))" formula="asin(sin(t));t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="acos(cos(AF1))" pointdata="data:acos(cos(AF1))" formula="acos(cos(t));t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="atan(tan(AF1))" pointdata="data:atan(tan(AF1))" formula="atan(tan(t));t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="atan2(AF1,AF2)" pointdata="data:atan2(AF1, AF2)" formula="atan2(t,u);t=menu:/Animation/Fields/Plot/AF1;u=menu:/Animation/Fields/Plot/AF2" plot="filled">
						</struct>
						<struct name="hypot(AF1,AF2)" pointdata="data:hypot(AF1,AF2)" formula="hypot(t,u);t=menu:/Animation/Fields/Plot/AF1;u=menu:/Animation/Fields/Plot/AF2" plot="filled">
						</struct>
					</struct>
					<struct name="Angular conversion" title="Choose a formula to plot:">
						<struct name="degrees(AF1)" pointdata="data:degrees(AF1)" formula="degrees(t);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="radians(AF1)" pointdata="data:radians(AF1)" formula="radians(t);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
					</struct>
					<struct name="Hyperbolic" title="Choose a formula to plot:">
						<struct name="cosh(AF1)" pointdata="data:cosh(AF1)" formula="cosh(t);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="sinh(AF1)" pointdata="data:sinh(AF1)" formula="sinh(t);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
						<struct name="tanh(AF1)" pointdata="data:tanh(AF1)" formula="tanh(t);t=menu:/Animation/Fields/Plot/AF1" plot="filled">
						</struct>
					</struct>
				</struct>
			</struct>
		</submenu>
		<submenu name="Close all">
			<action name="close_plots" />
		</submenu>
	</menu>
</menus>

