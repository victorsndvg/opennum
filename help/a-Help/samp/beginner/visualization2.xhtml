<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US">
  <head>
    <meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" /> 
    <title>Field visualizations</title>
    <link rel="stylesheet" type="text/css" href="../../sty.css" />
  </head>
  <body id="top">
    <p>Previous: <a href="visualization1.xhtml">Mesh visualizations</a>, Up: <a href="index.xhtml">Top</a></p>
    <hr /> 

    <h3>Field Visualizations</h3>
    <p><strong>On this page:</strong></p>
    <ul>
       <li><a href="#filled">Filled</a></li>
       <li><a href="#threshold">Threshold</a></li>
       <li><a href="#contours">Contours</a></li>
       <li><a href="#plotoverline">Plot over line</a></li>
       <li><a href="#vectors">Vectors</a></li>
       <li><a href="#deformedmesh">Defomed mesh</a></li>
       <li><a href="#streamlines">Streamlines</a></li>
       <li><a href="#vectorcomponents">Vector components</a></li>
    </ul>

    <p>The application <strong>Beginner - field visualization</strong> shows different ways of visualizing a finite element field in OpenNum. It also explains the use of <code>plot</code>, <code>mesh</code>, <code>celldata</code> and <code>pointdata</code>  attributes. For the examples, we suppose that the file <em>sclarfield3D.vtu</em> is in the current working folder and it has a valid mesh and field.</p>

    <p> The XML file of this example can be found at <code>&lt;<em>installdir</em>&gt;/apps/g-Beginner - field visualization/a-New/local.mnu.xml</code>, where <code>&lt;<em>installdir</em>&gt;</code> is the installation folder.</p>


    <h4 id="filled">Filled</h4>

    <p>
    For smoothed representation of a scalar field, you must create a <a href="../../xml/struct.xhtml"><code>struct</code></a> element with the attribute <code>plot="filled"</code> and attributes <code>mesh</code> and <code>pointdata</code> pointing to the appropriate mesh and field.
    </p>

    <pre class="xml">&lt;struct name="Filled"  plot="filled" mesh="file:scalarfield3D.vtu" pointdata="data:Potential (V)"&gt;
&lt;/struct&gt;</pre>

    <p align="center"> 
        <img width="20%" src="images/plot-filled.png" />
        <br clear="all" /> 
        <span id="fig-1" class="caption"> <strong>Figure 1:</strong>Filled.</span>
    </p>
    <div class="back"><a href="#top">Back to top</a></div>

    <h4 id="threshold">Threshold</h4>

    <p>
    Threshold allows a smoothed representation of a scalar field as in the case of filled, but in this case allows to define in wich limits represent the field values. 
    </p>

    <p>
    You must create a <a href="../../xml/struct.xhtml"><code>struct</code></a> element with the attribute <code>plot="threshold"</code> and attributes <code>mesh</code> and <code>pointdata</code> pointing to the appropriate mesh and field.
    </p>

    <p align="center"> 
        <img width="20%" src="images/plot-threshold.png" />
        <br clear="all" /> 
        <span id="fig-2" class="caption"> <strong>Figure 2:</strong>Threshold.</span>
    </p>

    <pre class="xml">&lt;struct name="Threshold"  plot="threshold" mesh="file:scalarfield3D.vtu" pointdata="data:Potential (V)"&gt;
&lt;/struct&gt;</pre>
    <div class="back"><a href="#top">Back to top</a></div>

    <h4 id="contours">Contours</h4>

    <p>
    Countours plot represents a set of isosurfaces or isolines of a scalar field, depending on the mesh dimension. For creating this kind of visualization you must use a <a href="../../xml/struct.xhtml"><code>struct</code></a> tag with the attribute <code>plot="contour"</code>.
    </p>

    <pre class="xml">&lt;struct name="Isosurfaces"  plot="contour" mesh="file:scalarfield3D.vtu" pointdata="data:Potential (V)"&gt;
&lt;/struct&gt;</pre>

    <p align="center"> 
        <img width="20%" src="images/plot-contour.png" />
        <br clear="all" /> 
        <span id="fig-3" class="caption"> <strong>Figure 3:</strong>Contour.</span>
    </p>
    <div class="back"><a href="#top">Back to top</a></div>

    <h4 id="plotoverline">Plot over line</h4>

    <p>
    <em>Plot over line</em> is a type of visualization that allows freely moving a line to represent the scalar field through the intersection of this line and the mesh.
    </p>

    <p>
    For creating this kind of visualization you must use a <a href="../../xml/struct.xhtml"><code>struct</code></a> tag with the attribute <code>plot="plot_over_line"</code>.
    </p>

    <pre class="xml">&lt;struct name="Plot over line"  plot="plot_over_line" mesh="file:scalarfield3D.vtu" pointdata="data:Potential (V)"&gt;
&lt;/struct&gt;</pre>

    <p align="center"> 
        <img width="20%" src="images/plot-over-line.png" />
        <br clear="all" /> 
        <span id="fig-4" class="caption"> <strong>Figure 4:</strong>Plot over line.</span>
    </p>
    <div class="back"><a href="#top">Back to top</a></div>

    <h4 id="vectors">Vectors</h4>

    <p>
    It is also posiible to represent vector fields with colored arrows. To visualize this kind of plot you must use  <a href="../../xml/struct.xhtml"><code>struct</code></a> tag with the attribute <code>plot="vector_field"</code>.
    </p>

    <pre class="xml">&lt;struct name="Vectors" plot="vector_field" mesh="file:vectorfield3D.vtu" pointdata="data:Magnetic field (A/m), real part"&gt;
&lt;/struct&gt;</pre>

    <p align="center"> 
        <img width="20%" src="images/plot-vector.png" />
        <br clear="all" /> 
        <span id="fig-5" class="caption"> <strong>Figure 5:</strong>Vectors.</span>
    </p>
    <div class="back"><a href="#top">Back to top</a></div>

    <h4 id="deformedmesh">Deformed mesh</h4>

    <p>
    This kind of plot is used to deform a mesh with vector data. To visualize this kind of plot you must use  <a href="../../xml/leaf.xhtml"><code>leaf</code></a> tag with the attribute <code>plot="vector_deformed"</code>.
    </p>

    <pre class="xml">&lt;leaf  name="Deformed mesh" plot="vector_deformed" mesh="file:vectorfield3D.vtu" pointdata="data:Magnetic field (A/m), real part"&gt;
&lt;/leaf&gt;</pre>
    <div class="back"><a href="#top">Back to top</a></div>

    <h4 id="streamlines">Streamlines</h4>

    <p>
    This is a plot that generates a streamline for an arbitrary vector dataset. This kind of plot must be used over 3D meshes. 
    </p>

    <p>
    You must create a <a href="../../xml/struct.xhtml"><code>struct</code></a> element with the attribute <code>plot="streamline"</code> and attributes <code>mesh</code> and <code>pointdata</code> pointing to the appropriate mesh and field.
    </p>

    <pre class="xml">&lt;struct name="Streamlines" plot="streamline" mesh="file:vectorfield3D.vtu" pointdata="data:Magnetic field (A/m), real part"&gt;
&lt;/struct&gt;</pre>

    <p align="center"> 
        <img width="20%" src="images/plot-streamlines.png" />
        <br clear="all" /> 
        <span id="fig-6" class="caption"> <strong>Figure 6:</strong>Streamlines.</span>
    </p>
    <div class="back"><a href="#top">Back to top</a></div>

    <h4 id="vectorcomponents">Vector components</h4>

    <p>
    This type of display makes easy the viewing of each component of a vector field. To visualize this kind of plot you mus use a <a href="../../xml/leaf.xhtml"><code>leaf</code></a> tag with the attribute <code>plot="vector_components"</code>. 
    </p>

    <p>
    As we have a list of component of single selection, a difference from other views, is the appearance fo the <code>selection="single"</code> attribute.
    </p>

    <pre class="xml">&lt;leaf name="Vector components" plot="vector_components" mesh="file:vectorfield3D.vtu" pointdata="data:Magnetic field (A/m), real part" selection="single" type="charlist"&gt;
&lt;/leaf&gt;</pre>
    <div class="back"><a href="#top">Back to top</a></div>

    <hr />
    <p>&copy; 2015 <a href="http://www.usc.es/">Universidade de Santiago de Compostela</a></p>
  </body>
</html>
